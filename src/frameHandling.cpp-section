///////////////////////////////////////////////////
//Frame Handlers///////////////////////////////////
///////////////////////////////////////////////////
void (*frameHandlers
        [NUM_FRAME_TYPES]
        [MAX_NUM_FRAME_SUBTYPES])
         (unsigned int,unsigned char *);

void * getHandler
 (unsigned char frameType
 ,unsigned char frameSubType){
 if(frameType >= NUM_FRAME_TYPES)return NULL;
 if(frameSubType >= MAX_NUM_FRAME_SUBTYPES) return NULL;
 return (void *)frameHandlers[frameType][frameSubType];
}

void initializeFrameHandlers(){
 int i, j;
 for(i=0;i<NUM_FRAME_TYPES;i++)
  for(j=0;j<MAX_NUM_FRAME_SUBTYPES;j++)
   frameHandlers[i][j]=NULL;
 //All frames subtypes which are NULL or otherwise undefined are ignored.
 frameHandlers[0][0]=&sendInitializationFrame;
 frameHandlers[1][1]=&displayChar;
}

void handleFrame(
 unsigned int  length,
 unsigned char type,
 unsigned char subType,
 unsigned char * information,
 void * callerParameter)
 /*We ignore the callerParameter.
   It is not needed for FCHAD code.
   It is used in the BRLTTY driver.*/{
 void (*handler)(unsigned int,unsigned char *) =
  (void (*)(unsigned int, unsigned char*))getHandler(type,subType);
 if(handler)(handler)(length,information);
 free(information);
}

void checkSerial(){
 checkForFrameAndReact(&handleFrame,START_OF_FRAME,NULL,NULL);
}
