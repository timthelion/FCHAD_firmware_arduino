// Serial events:
void sendOnDown(unsigned char sensor){
 #ifdef TEST_SENSORS
 Serial.print("Down:");Serial.println(sensor);
 #else
 unsigned char information [5] = {
 //Node
 0,
 //Row
 0,
 0,
 //Column
 0,
 sensor};
 sendFrame(5, 2, 3, information,NULL);
 #endif
}
void sendOnUp(unsigned char sensor){
 #ifdef TEST_SENSORS
 Serial.print("Up:");Serial.println(sensor);
 #else
 unsigned char information [5] = {
  //Node
  0,
  //Row
  0,
  0,
  //Column
  0,
  sensor};
 sendFrame(5, 2, 4, information,NULL);
 #endif
}

//Touch sensing
TouchSensors*touchSensors;

//Setup touch sensors
TouchSensors * setupTouch(){
 TouchSensors* theseTouchSensors =
  (TouchSensors*)
   malloc(sizeof(TouchSensors));
 theseTouchSensors->touchStates=(unsigned char *)malloc(NUM_SENSORS*sizeof(unsigned char));
 theseTouchSensors->touchSensorValues=(long *)malloc(NUM_SENSORS*sizeof(long));
 for(unsigned char i=0;i<NUM_SENSORS;i++)
  theseTouchSensors->touchStates[i]=0;
 for(unsigned char i = 0; i < SELECTOR_BITS; i++)
  pinMode(selectorPins[i],OUTPUT);
 return theseTouchSensors;
}

int readTouchSensorState(unsigned char sensor){
 for(unsigned char i = 0; i < SELECTOR_BITS; i++)
  digitalWrite(selectorPins[i],((sensorIndexes[sensor]>>i) & 1));
 return (analogRead(ANALOG_LINE));
}

//Event handlers
void readTouchSensors(){
 //Read the sensors.
 for(unsigned char i = 0; i<NUM_SENSORS;i++){
  touchSensors->touchSensorValues[i]=touchSensors->touchSensorValues[i]+readTouchSensorState(i);
 }
}

void recordSensorEvents(){
 sendSensorChanges();
}

void sendSensorChanges(){
 //Send change events.
 for(char i = NUM_SENSORS-1;i>=0;--i){
  if((touchSensors->touchSensorValues[i]>TOUCH_THRESHOLD)
                                 !=
                     touchSensors->touchStates[i]){
   if(touchSensors->touchStates[i]){
    touchSensors->touchStates[i]=0;
    sendOnUp(i);
   }else{
    touchSensors->touchStates[i]=1;
    sendOnDown(i);
   }
  }
 }
 //Zero the sensors.
 for(unsigned char i=0;i<NUM_SENSORS;i++)
  touchSensors->touchSensorValues[i]=0;
}
